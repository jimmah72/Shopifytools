{
  "meta": {
    "instanceId": "cf52878f4b9d5e81c7b9d3b4d7d6c3e1d8bc8fbfb8ca2f56e5e3d1b9c0a2f5e8"
  },
  "nodes": [
    {
      "parameters": {},
      "id": "6f4c7b8b-2b5d-4e5c-8f3a-1b2c3d4e5f6g",
      "name": "When clicking 'Test workflow'",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "simple": {
          "from": "no-reply@googleads-noreply.google.com",
          "subject": "Google Ads Report"
        }
      },
      "id": "a1b2c3d4-e5f6-7890-ab12-cd34ef567890",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 1,
      "position": [
        460,
        300
      ],
      "credentials": {
        "gmailOAuth2": {
          "id": "6",
          "name": "Gmail OAuth2 account"
        }
      }
    },
    {
      "parameters": {
        "attachmentsPrefix": "attachment_",
        "options": {
          "allowUnauthorizedCerts": false,
          "encoding": "utf8"
        }
      },
      "id": "b2c3d4e5-f678-901a-bc23-de45fg678901",
      "name": "Download Attachments",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 1,
      "position": [
        680,
        300
      ],
      "credentials": {
        "gmailOAuth2": {
          "id": "6",
          "name": "Gmail OAuth2 account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Process Gmail attachment CSV data\nconst items = [];\n\n// Get the first item (should be the CSV attachment)\nif ($input.all().length === 0) {\n  return [{ json: { error: 'No email data received' } }];\n}\n\nfor (const item of $input.all()) {\n  const attachments = item.json.attachments || [];\n  \n  // Process each attachment\n  for (const attachment of attachments) {\n    if (attachment.filename?.toLowerCase().includes('.csv')) {\n      try {\n        // Parse CSV content\n        const csvContent = attachment.content;\n        const lines = csvContent.split('\\n');\n        \n        // Skip header and process data lines\n        for (let i = 1; i < lines.length; i++) {\n          const line = lines[i].trim();\n          if (!line) continue;\n          \n          const columns = line.split(',');\n          if (columns.length >= 3) {\n            // Extract data from CSV columns\n            const date = columns[0]?.replace(/\"/g, '').trim();\n            const campaign = columns[1]?.replace(/\"/g, '').trim();\n            const spend = parseFloat(columns[2]?.replace(/\"/g, '').trim()) || 0;\n            \n            // Create webhook payload\n            items.push({\n              json: {\n                apiKey: 'shopify-tools-webhook-2025',\n                storeDomain: '25898e.myshopify.com',\n                platform: 'google_ads',\n                spend: spend,\n                date: date,\n                campaignName: campaign\n              }\n            });\n          }\n        }\n      } catch (error) {\n        items.push({\n          json: {\n            error: 'Failed to process CSV: ' + error.message,\n            filename: attachment.filename\n          }\n        });\n      }\n    }\n  }\n}\n\n// If no CSV data found, create a test payload\nif (items.length === 0) {\n  items.push({\n    json: {\n      apiKey: 'shopify-tools-webhook-2025',\n      storeDomain: '25898e.myshopify.com',\n      platform: 'google_ads',\n      spend: 25.5,\n      date: '2025-06-23',\n      campaignName: 'Test Campaign'\n    }\n  });\n}\n\nreturn items;"
      },
      "id": "c3d4e5f6-7890-12ab-cd34-ef567890abcd",
      "name": "Process CSV Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        900,
        300
      ]
    },
    {
      "parameters": {
        "url": "https://shopifytools.netlify.app/api/ad-spend/webhook",
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json }}"
      },
      "id": "d4e5f6g7-8901-23bc-de45-fg6789012345",
      "name": "Send to Webhook",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1120,
        300
      ]
    }
  ],
  "connections": {
    "When clicking 'Test workflow'": {
      "main": [
        [
          {
            "node": "Process CSV Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Download Attachments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Attachments": {
      "main": [
        [
          {
            "node": "Process CSV Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process CSV Data": {
      "main": [
        [
          {
            "node": "Send to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-06-23T21:20:00.000Z"
} 