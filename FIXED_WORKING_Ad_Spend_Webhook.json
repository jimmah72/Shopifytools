{
  "meta": {
    "instanceId": "cf52878f4b9d5e81c7b9d3b4d7d6c3e1d8bc8fbfb8ca2f56e5e3d1b9c0a2f5e8"
  },
  "nodes": [
    {
      "parameters": {},
      "id": "6f4c7b8b-2b5d-4e5c-8f3a-1b2c3d4e5f6g",
      "name": "When clicking 'Test workflow'",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "getAll",
        "returnAll": false,
        "limit": 50,
        "filters": {
          "sender": "no-reply@googleads-noreply.google.com",
          "subject": "Google Ads Report",
          "includeSpamTrash": false
        },
        "format": "resolved"
      },
      "id": "a1b2c3d4-e5f6-7890-ab12-cd34ef567890",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2,
      "position": [460, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "6",
          "name": "Gmail OAuth2 account"
        }
      }
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "get",
        "messageId": "={{ $json.id }}",
        "format": "resolved",
        "attachments": true,
        "options": {
          "attachmentsPrefix": "attachment_"
        }
      },
      "id": "b2c3d4e5-f678-901a-bc23-de45fg678901",
      "name": "Download Attachments",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2,
      "position": [680, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "6",
          "name": "Gmail OAuth2 account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Process Gmail attachment CSV data for Google Ads\nconst items = [];\n\n// Debug: Log input data\nconsole.log('Processing input items:', $input.all().length);\n\n// If no input (manual trigger), create test data\nif ($input.all().length === 0) {\n  console.log('No input data - creating test payload');\n  items.push({\n    json: {\n      apiKey: 'shopify-tools-webhook-2025',\n      storeDomain: '25898e.myshopify.com',\n      platform: 'google_ads',\n      spend: 25.5,\n      date: '2025-06-23',\n      campaignName: 'Test Campaign - Manual Trigger'\n    }\n  });\n  return items;\n}\n\n// Process each email message\nfor (const item of $input.all()) {\n  console.log('Processing item:', item.json.subject);\n  \n  // Check if message has attachments\n  const attachments = item.json.attachments || [];\n  console.log('Found attachments:', attachments.length);\n  \n  if (attachments.length === 0) {\n    console.log('No attachments found, skipping item');\n    continue;\n  }\n  \n  // Process each attachment\n  for (const attachment of attachments) {\n    console.log('Processing attachment:', attachment.filename);\n    \n    // Check if it's a CSV file\n    if (!attachment.filename || !attachment.filename.toLowerCase().endsWith('.csv')) {\n      console.log('Skipping non-CSV attachment:', attachment.filename);\n      continue;\n    }\n    \n    try {\n      // Get CSV content (it should be base64 encoded)\n      let csvContent = attachment.content;\n      \n      // If content is base64 encoded, decode it\n      if (attachment.contentType && attachment.contentType.includes('base64')) {\n        csvContent = Buffer.from(csvContent, 'base64').toString('utf8');\n      }\n      \n      console.log('CSV content preview:', csvContent.substring(0, 200));\n      \n      // Parse CSV content\n      const lines = csvContent.split('\\n').filter(line => line.trim());\n      console.log('Found CSV lines:', lines.length);\n      \n      if (lines.length < 2) {\n        console.log('CSV has no data rows, skipping');\n        continue;\n      }\n      \n      // Skip header row and process data\n      for (let i = 1; i < lines.length; i++) {\n        const line = lines[i].trim();\n        if (!line) continue;\n        \n        // Parse CSV line (handle quoted values)\n        const columns = [];\n        let current = '';\n        let inQuotes = false;\n        \n        for (let j = 0; j < line.length; j++) {\n          const char = line[j];\n          if (char === '\"') {\n            inQuotes = !inQuotes;\n          } else if (char === ',' && !inQuotes) {\n            columns.push(current.trim());\n            current = '';\n          } else {\n            current += char;\n          }\n        }\n        columns.push(current.trim()); // Add last column\n        \n        console.log('Parsed columns:', columns.length, columns.slice(0, 3));\n        \n        if (columns.length >= 3) {\n          // Extract data (assuming: Date, Campaign, Spend)\n          const date = columns[0]?.replace(/\"/g, '').trim();\n          const campaign = columns[1]?.replace(/\"/g, '').trim();\n          const spendStr = columns[2]?.replace(/[\"$,]/g, '').trim();\n          const spend = parseFloat(spendStr) || 0;\n          \n          console.log('Extracted:', { date, campaign, spend });\n          \n          // Only add if we have valid data\n          if (date && campaign && spend > 0) {\n            items.push({\n              json: {\n                apiKey: 'shopify-tools-webhook-2025',\n                storeDomain: '25898e.myshopify.com',\n                platform: 'google_ads',\n                spend: spend,\n                date: date,\n                campaignName: campaign\n              }\n            });\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error processing CSV:', error.message);\n      items.push({\n        json: {\n          error: 'Failed to process CSV: ' + error.message,\n          filename: attachment.filename\n        }\n      });\n    }\n  }\n}\n\n// If no valid CSV data found but we had input, create a test payload\nif (items.length === 0 && $input.all().length > 0) {\n  console.log('No CSV data extracted, creating fallback payload');\n  items.push({\n    json: {\n      apiKey: 'shopify-tools-webhook-2025',\n      storeDomain: '25898e.myshopify.com',\n      platform: 'google_ads',\n      spend: 15.0,\n      date: '2025-06-23',\n      campaignName: 'Fallback Test Campaign'\n    }\n  });\n}\n\nconsole.log('Final items to send:', items.length);\nreturn items;"
      },
      "id": "c3d4e5f6-7890-12ab-cd34-ef567890abcd",
      "name": "Process CSV Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://shopifytools.netlify.app/api/ad-spend/webhook",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "={{ JSON.stringify($json) }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          },
          "timeout": 30000
        }
      },
      "id": "d4e5f6g7-8901-23bc-de45-fg6789012345",
      "name": "Send to Webhook",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1120, 300]
    }
  ],
  "connections": {
    "When clicking 'Test workflow'": {
      "main": [
        [
          {
            "node": "Process CSV Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Download Attachments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Attachments": {
      "main": [
        [
          {
            "node": "Process CSV Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process CSV Data": {
      "main": [
        [
          {
            "node": "Send to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-06-23T21:30:00.000Z"
} 